@startuml
title OKRocket ユースケース図（修正版）

left to right direction

skinparam usecase {
  BackgroundColor #ffffff
  BorderColor #7a7adb
  FontColor #000000
  BorderThickness 2
}
skinparam package {
  BackgroundColor #ffffff
  BorderColor #5941a9
}

actor "ユーザー" as UserReader
actor "チームリーダー" as Admin
actor "個人ユーザ" as User

User --|> UserReader
Admin --|> UserReader

package "OKRocket" {
  package "認証" as AuthUsecase {
    usecase "ログインする" as login
    usecase "ログアウトする" as logout
  }

  package "個人目標ユースケース" as PersonalObjectiveUsease {
    usecase "個人目標を登録する" as createObjective
    usecase "個人目標を一覧表示する" as listObjectives
    usecase "個人目標を更新する" as updateObjective
    usecase "個人目標を削除する" as deleteObjective
    usecase "進捗率を取得する" as getProgressRate
  }

  package "成果指標ユースケース" as KeyResultUsecase {
    usecase "成果指標を登録する" as createKeyResult
    usecase "成果指標を一覧表示する" as listKeyResults
    usecase "成果指標を更新する" as updateKeyResult
  }

  package "チーム管理ユースケース" as TeamManagementUsecase {
    usecase "チームを登録する" as createTeam
    usecase "チームを一覧表示する" as listTeams
    usecase "チームを更新する" as updateTeam
    usecase "チームを削除する" as deleteTeam
    usecase "チームメンバーを追加する" as addTeamMember
    usecase "チームメンバーを削除する" as removeTeamMember
  }

  package "成長支援ユースケース" as GrowthSupportUsecase {
    usecase "ガクチカを生成する" as generateGakuchikaWithMile
  }

  package "振り返りユースケース" as ReflectionUsecases {
    usecase "振り返りを作成する" as createReflection
    usecase "振り返りを一覧表示する" as listReflections
    usecase "振り返りを更新する" as updateReflection
    usecase "振り返りを削除する" as deleteReflection
  }

  package "チーム目標ユースケース" as TeamObjectiveUsecase{
    usecase "チーム目標を登録する" as createTeamObjective
    usecase "チーム目標を一覧表示する" as listTeamObjectives
    usecase "チーム目標を更新する" as updateTeamObjective
    usecase "チーム目標を削除する" as deleteTeamObjective
    usecase "チームの進捗を確認する" as getTeamProgressRate
  }

  package "外部連携ユースケース" as ExternalIntegrationUsecases {
    usecase "Slackに進捗を通知" as notifyProgressToSlack
    usecase "Googleカレンダーに登録" as registerTaskToGoogleCalendar
    usecase "Slackにリマインド設定" as setSlackReminder
    usecase "Slackからメッセージ受信" as receiveMessageFromSlack
  }
}

UserReader --> login
UserReader --> logout
UserReader --> createObjective
UserReader --> listObjectives
UserReader --> updateObjective
UserReader --> deleteObjective
UserReader --> getProgressRate

UserReader --> createKeyResult
UserReader --> listKeyResults
UserReader --> updateKeyResult
UserReader --> generateGakuchikaWithMile
UserReader --> createReflection
UserReader --> listReflections
UserReader --> updateReflection
UserReader --> deleteReflection

Admin --> createTeamObjective
Admin --> listTeamObjectives
Admin --> updateTeamObjective
Admin --> deleteTeamObjective
Admin --> getTeamProgressRate
Admin --> addTeamMember
Admin --> removeTeamMember
Admin --> createTeam
Admin --> listTeams
Admin --> updateTeam
Admin --> deleteTeam

UserReader --> notifyProgressToSlack
UserReader --> registerTaskToGoogleCalendar
UserReader --> setSlackReminder
receiveMessageFromSlack --> UserReader

@enduml
